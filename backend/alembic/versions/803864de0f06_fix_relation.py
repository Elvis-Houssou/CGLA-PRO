"""fix relation

Revision ID: 803864de0f06
Revises: 17f9be768722
Create Date: 2025-09-07 21:20:51.900595

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '803864de0f06'
down_revision: Union[str, None] = '17f9be768722'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
        sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('firstname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('lastname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('age', sa.Integer(), nullable=True),
        sa.Column('role', sa.Enum('station_manager', 'car_washer', 'station_client', name='roleemployee'), nullable=False),
        sa.Column('is_verified', sa.Boolean(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=True),
        sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('can_add', sa.Boolean(), nullable=False),
        sa.Column('can_edit', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employees_email'), 'employees', ['email'], unique=True)
    op.create_index(op.f('ix_employees_username'), 'employees', 
    ['username'], unique=True)
    # op.drop_table('stock_histories')

    # Supprimer la table car_wash_employee si elle existe
    op.drop_table('car_wash_employee')

    # Créer la table car_wash_employee
    op.create_table(
        'car_wash_employee',
        sa.Column('car_wash_id', sa.Integer(), nullable=False),
        sa.Column('employee_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['car_wash_id'], ['car_wash.id']),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id']),  # Changé de 'Employee.id' à 'user.id'
        sa.PrimaryKeyConstraint('car_wash_id', 'employee_id')
    )


def downgrade() -> None:
    """Downgrade schema."""
    op.drop_table('stock_managments')
    op.drop_table('car_wash_employee')
    op.drop_table('car_wash')
    op.drop_table('employees')
    # op.execute('DROP TYPE IF EXISTS roleemployee')
