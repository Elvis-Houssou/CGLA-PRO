"""create employee table and remake role

Revision ID: 17f9be768722
Revises: 871e4043906f
Create Date: 2025-09-04 15:18:42.655589

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '17f9be768722'
down_revision: Union[str, None] = '871e4043906f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employees',
        sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('firstname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('lastname', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('age', sa.Integer(), nullable=True),
        sa.Column('role', sa.Enum('station_manager', 'car_washer', 'station_client', name='roleemployee'), nullable=False),
        sa.Column('is_verified', sa.Boolean(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=True),
        sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('can_add', sa.Boolean(), nullable=False),
        sa.Column('can_edit', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employees_email'), 'employees', ['email'], unique=True)
    op.create_index(op.f('ix_employees_username'), 'employees', ['username'], unique=True)
    op.drop_table('stock_histories')

    # Créer le type roleuser pour la table user
    op.execute("""
        CREATE TYPE roleuser AS ENUM (
            'super_admin', 'system_manager', 'station_owner'
        );
    """)

    # Modifier la colonne role dans user
    op.execute("""
        ALTER TABLE "user" ALTER COLUMN role TYPE roleuser
        USING (role::text::roleuser);
    """)

    # Supprimer l'ancien type role
    op.execute("DROP TYPE role;")

    # op.alter_column('user', 'role',
    #            existing_type=postgresql.ENUM('super_admin', 'system_manager', 'station_owner', 'station_manager', 'car_washer', 'station_client', name='role'),
    #            type_=sa.Enum('super_admin', 'system_manager', 'station_owner', name='roleuser'),
    #            existing_nullable=False)
    # ### end Alembic commands ###
    
    op.drop_table('car_wash_employee')
    op.create_table(
        'car_wash_employee',
        sa.Column('car_wash_id', sa.Integer(), nullable=False),
        sa.Column('employee_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['car_wash_id'], ['car_wash.id']),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id']),  # Changé de 'Employee.id' à 'user.id'
        sa.PrimaryKeyConstraint('car_wash_id', 'employee_id')
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'role',
               existing_type=sa.Enum('super_admin', 'system_manager', 'station_owner', name='roleuser'),
               type_=postgresql.ENUM('super_admin', 'system_manager', 'station_owner', 'station_manager', 'car_washer', 'station_client', name='role'),
               existing_nullable=False)
    op.create_table('stock_histories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('operation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_updated', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['stock_id'], ['stock_managments.id'], name='stock_managments_history_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stock_histories_pkey')
    )
    op.drop_index(op.f('ix_employees_username'), table_name='employees')
    op.drop_index(op.f('ix_employees_email'), table_name='employees')
    op.drop_table('employees')
    op.drop_table('car_wash_employee')

    # ### end Alembic commands ###
